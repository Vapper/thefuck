language: python
sudo: true
matrix:
  include:
  - os: linux
    dist: trusty
    python: '3.6'
  - os: linux
    dist: trusty
    python: '3.5'
  - os: linux
    dist: trusty
    python: '3.4'
  - os: linux
    dist: trusty
    python: '2.7'
  - os: osx
    language: generic
services:
- docker
addons:
  apt:
    packages:
    - python-commandnotfound
    - python3-commandnotfound
before_install:
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew update ; fi
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then brew upgrade python; fi
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then pip3 install virtualenv; fi
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then virtualenv venv -p python3; fi
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then source venv/bin/activate; fi
- if [[ $TRAVIS_OS_NAME == "osx" ]]; then pip install pylint; fi
- if [[ $TRAVIS_OS_NAME == "linux" ]]; then sudo apt-get install -y pylint; fi
- pip install -U pip
- pip install -U coveralls
install:
- pip install -Ur requirements.txt
- python setup.py develop
- rm -rf build
script:
- export COVERAGE_PYTHON_VERSION=python-${TRAVIS_PYTHON_VERSION:0:1}
- export RUN_TESTS="coverage run --source=thefuck,tests -m py.test -v --capture=sys
  tests"
- if [[ $TRAVIS_PYTHON_VERSION == 3.6 && $TRAVIS_OS_NAME != "osx" ]]; then $RUN_TESTS
  --enable-functional; fi
- if [[ $TRAVIS_PYTHON_VERSION != 3.6 || $TRAVIS_OS_NAME == "osx" ]]; then $RUN_TESTS;
  fi
after_success:
- if [[ $TRAVIS_PYTHON_VERSION == 3.6 && $TRAVIS_OS_NAME != "osx" ]]; then coveralls;
  fi
notifications:
  slack:
    secure: T9jxF3LbHRtBMtN99WHQo1yu620TdFhxwtRCl95BTanys85tsuCtU1Zu9K7WE8Hk/zmWyBlRz9GAMX2A1YDlblSNV/haZ3Wr/SSmKABhL1+e+okF+4ZUsnvjXSHUDWLWXsuwZ38rjf96eSGKj3WwWik8YZyndf6UhJe4Yy//HMyOUsy0aDTXxkAf4/zEVLPHBFHUGtBPGqOt7lSbyxqFK6JUPFdHxiIaIpFw5CtvR3hBk242w+sXaPsoBV1K4q8nx9w8sa7556vqVb16uf7Kk6A7ckE0VbZORkC413WYVasFpF9k37MCjheg7EGuUMIquMwD7e7I9f9YX0O6TGukYPOY88dYqpUKVRdhPiLeaZw0R+C/ZwocHY9gTeW38eA7vbpDRFIT6TN73iR5/ImpU2IfwDiUsozzcuZDzHoJzjXV48S42YV7bH+ztREUDbO5Y7yA0FKts6GGNSc5qj2UfC71zAru6aBCGPi6z80oYOFLFmIqcPT+7USfALlnT2FEna0Yt7eLoVkIidiGpIHbYqSXYi8yaL+NJCvfYt+c2x5Z4l6tXbQNmY4oMF250sdSR3wacz6oJPPrf/XltNOiEIfu1T0C/FmFG6IvW8yk4+g5jBKNxaLzbRql8o9b78ZGHkxITPCdVIXkESJ4imCvtI+8GfkW339odqXDqsUDSxY=
